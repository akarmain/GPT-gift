# /etc/nginx/sites-available/example.domain.com
server {
    if ($host = example.domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    # Listen on port 80 and handle HTTP requests
    listen 80;
    server_name example.domain.com;
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;

}

server {
    # Listen on port 443 for HTTPS requests
    listen 443 ssl http2;
    server_name example.domain.com www.example.domain.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/example.domain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.domain.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Root directory and index file
    root /var/www/example.domain.com;
    location /static/ { alias /var/www/example.domain.com/staticfiles/; }


    # Reverse proxy configuration
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    # Error pages handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
